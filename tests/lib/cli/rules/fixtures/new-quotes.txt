/**
 * @fileoverview This is a \`description\` that contains 'single quote' and "double qutoes"
 */

import { RuleContext } from '../../rule-context';
// The list of types depends on the events you want to capture.
import { IRule, IRuleBuilder, IFetchStart, IFetchEnd, IFetchError } from '../../types';
import { debug as d } from '../../utils/debug';

const debug: debug.IDebugger = d(__filename);

// ------------------------------------------------------------------------------
// Public
// ------------------------------------------------------------------------------

const rule: IRuleBuilder = {
    create(context: RuleContext): IRule {
        // Your code here.
        const validateFetchStart = (fetchStart: IFetchStart) => {
            // Code to validate the rule on the event fetch::start.
        };
        const validateFetchEnd = (fetchEnd: IFetchEnd) => {
            // Code to validate the rule on the event fetch::end.
        };
        const validateFetchError = (fetchError: IFetchError) => {
            // Code to validate the rule on the event fetch::error.
        };

        return {
            'fetch::end': validateFetchEnd,
            'fetch::error': validateFetchError,
            'fetch::start': validateFetchStart
            // As many events as you need
        };
    },
    meta: {
        docs: {
            category: Category.pwa,
            description: `This is a \`description\` that contains 'single quote' and "double qutoes"`
        },
        recommended: true,
        schema: [],
        worksWithLocalFiles: false
    }
};

module.exports = rule;
